{"pages":[],"posts":[{"title":"Icarus主题优化","text":"前段时间用hexo搭建了自己的博客网站，放在了github里，也就是网上常说的hexo + githu page 搭建的静态博客网站，然后去主题里面挑了icarus,在这里感谢主题作者的创作，由于自己对默认的布局那些不满意，于是就参考网友们的教程，自己动手改了主题 布局文章的两栏布局主题默认是三栏布局，阅读文章的时候空间看起来太挤，这样的话可以通过去改配置文件的方式，把文章变为两栏布局，详细参考官方文档. 两栏主题宽度跟三栏不同，所以要强制指定为三栏布局，并且修改相应的宽度，这样所有的页面侧边栏的宽度就会保持一致。 layout/layout.jsx1234 &lt;Head site={site} config={config} helper={helper} page={page} /&gt;- &lt;body class={`is-${columnCount}-column`}&gt;+ &lt;body class={`is-3-column`}&gt; &lt;Navbar config={config} helper={helper} page={page} /&gt; layout/layout.jsx123456 'is-12': columnCount === 1,- 'is-8-tablet is-8-desktop is-8-widescreen': columnCount === 2,+ 'is-8-tablet is-8-desktop is-9-widescreen': columnCount === 2, 'is-8-tablet is-8-desktop is-6-widescreen': columnCount === 3 layout/common/widgets.jsx12345678910 function getColumnSizeClass(columnCount) { switch (columnCount) { case 2:- return 'is-4-tablet is-4-desktop is-4-widescreen';+ return 'is-4-tablet is-4-desktop is-3-widescreen'; case 3: return 'is-4-tablet is-4-desktop is-3-widescreen'; } include/style/responsive.styl1234567891011121314151617widescreen()+ .is-3-column .container+ max-width: $widescreen - $gap+ width: $widescreen - $gap+ .is-1-column .container, .is-2-column .container max-width: $desktop - 2 * $gap width: $desktop - 2 * $gapfullhd()+ .is-3-column .container+ max-width: $fullhd - 2 * $gap+ width: $fullhd - 2 * $gap+ .is-2-column .container max-width: $widescreen - 2 * $gap width: $widescreen - 2 * $gap 优化文章标题布局标题移动到文章信息上方，增加更新时间，并增加icon layout/common/article.jsx1234567891011121314151617181920212223242526272829303132{/* Metadata */} &lt;article class={`card-content article${'direction' in page ? ' ' + page.direction : ''}`} role=&quot;article&quot;&gt;+ {/* Title */}+ &lt;h1 className=&quot;title is-size-3 is-size-4-mobile has-text-weight-normal&quot;&gt;+ {index ?+ &lt;a className=&quot;has-link-black-ter&quot; href={url_for(page.link || page.path)}&gt;+ &lt;i className=&quot;fas fa-angle-double-right&quot;&gt;&lt;/i&gt;{page.title}+ &lt;/a&gt; :+ [&lt;i className=&quot;fas fa-angle-double-right&quot;&gt;&lt;/i&gt;, page.title]+ }+ &lt;/h1&gt; {page.layout !== 'page' ? &lt;div class=&quot;article-meta is-size-7 is-uppercase level is-mobile&quot;&gt; &lt;div class=&quot;level-left&quot;&gt; {/* Creation Date */}- {page.date &amp;&amp; &lt;span class=&quot;level-item&quot; dangerouslySetInnerHTML={{- __html: _p('article.created_at', `&lt;time dateTime=&quot;${date_xml(page.date)}&quot; title=&quot;${date_xml(page.date)}&quot;&gt;${date(page.date)}&lt;/time&gt;`)- }}&gt;&lt;/span&gt;}+ {page.date &amp;&amp; &lt;span class=&quot;level-item&quot;&gt;+ &lt;i className=&quot;far fa-calendar-alt&quot;&gt;&amp;nbsp;&lt;/i&gt;+ &lt;time dateTime=&quot;${date_xml(page.date)}&quot; title=&quot;${date_xml(page.date)}&quot;&gt;{date(page.date)}&lt;/time&gt;+ &lt;/span&gt;} {/* Last Update Date */}- {page.updated &amp;&amp; &lt;span class=&quot;level-item&quot; dangerouslySetInnerHTML={{- __html: _p('article.updated_at', `&lt;time dateTime=&quot;${date_xml(page.updated)}&quot; title=&quot;${date_xml(page.updated)}&quot;&gt;${date(page.updated)}&lt;/time&gt;`)- }}&gt;&lt;/span&gt;}+ {page.updated &amp;&amp; &lt;span class=&quot;level-item is-hidden-mobile&quot;&gt;+ &lt;i class=&quot;far fa-calendar-check&quot;&gt;&amp;nbsp;&lt;/i&gt;+ &lt;time dateTime=&quot;${date_xml(page.updated)}&quot; title=&quot;${date_xml(page.updated)}&quot;&gt;{date(page.updated)}&lt;/time&gt;+ &lt;/span&gt;} {/* author */} {page.author ? &lt;span class=&quot;level-item&quot;&gt; {page.author} &lt;/span&gt; : null} 其中时间直接使用日期 source/js/main.js12345- if (typeof moment === 'function') {- $('.article-meta time').each(function() {- $(this).text(moment($(this).attr('datetime')).fromNow());- });- } 优化移动端的显示在移动端隐藏archive和tags。 source/js/main.js12345 }+ $('div.container div.card[data-type=tags]').addClass('is-hidden-mobile');+ $('div.container div.card[data-type=archives]').addClass('is-hidden-mobile'); }(jQuery, window.moment, window.ClipboardJS, window.IcarusThemeSettings)); 功能添加定制的PV、UV访问数据icarus主题在启用busuanzi插件之后，只会显示网站的UV数据，没有显示PV，自己添加一个 node_modules\\hexo-theme-icarus\\layout\\common\\footer.jsx123-visitorCounterTitle: _p('plugin.visitor_count', '&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;0&lt;/span&gt;'))+visitorCounterTitle: _p('plugin.visitor_count', '&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;0&lt;/span&gt;') + _p('plugin.visit_count', ', &lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;0&lt;/span&gt;') 增加标题自动计数自己用的感觉不方便，后来舍弃了，以下代码是正确的 include/style/article.styl123456789+.article {counter-reset:section}+.article h2{counter-reset:sub-section}+.article h3{counter-reset:composite}+.article h4{counter-reset:detail}+.article h2:before{content:counter(section) &quot; &quot;;counter-increment:section}+.article h3:before{content:counter(section) &quot;.&quot; counter(sub-section) &quot; &quot;;counter-increment:sub-section}+.article h4:before{content:counter(section) &quot;.&quot; counter(sub-section) &quot;.&quot; counter(composite) &quot; &quot;;counter-increment:composite} 页面footer并排显示一组icon默认情况下一个icon对应一个链接，但例如 CC BY-NC-SA 4.0 需要四个图标一组。因此修改代码，使得配置 link.icon 可以是一个数组，效果可以参考页面底部。 layout/common/footer.jsx12345678910111213 const link = links[name]; return &lt;p class=&quot;control&quot;&gt; &lt;a class={`button is-transparent ${link.icon ? 'is-large' : ''}`} target=&quot;_blank&quot; rel=&quot;noopener&quot; title={name} href={link.url}&gt;- {link.icon ? &lt;i class={link.icon}&gt;&lt;/i&gt; : name}+ {link.icon ?+ (Array.isArray(link.icon) ?+ link.icon.map(i =&gt; [&lt;i className={i}&gt;&lt;/i&gt;, '\\u00A0']) :+ &lt;i className={link.icon}&gt;&lt;/i&gt;+ ) : name} &lt;/a&gt; &lt;/p&gt;; })} 忽略校验的schema include/schema/common/footer.json12- &quot;$ref&quot;: &quot;/misc/poly_links.json&quot;, 再_config.icarus.yml的配置文件如下： 1234567891011footer: links: CC BY-NC-SA 4.0: icon: - fab fa-creative-commons - fab fa-creative-commons-by - fab fa-creative-commons-nc - fab fa-creative-commons-sa url: 'https://creativecommons.org/licenses/by-nc-sa/4.0/' 样式按钮的背景颜色增加渐变效果include/style/widget.styl12345678910 .widget .menu-list li ul margin-right: 0+ a+ transition: background-color 0.3s ease-in-out .level margin-bottom: 0 卡片增加浮动效果:hover 时增大阴影，并增加动画属性 ease-in-out。 include/style/card.styl1234567 .card overflow: visible border-radius: $card-radius+ &amp;:hover+ box-shadow: 0 6px 15px rgba(0,0,0,0.15), 0 0 1px rgba(0,0,0,0.1) source/js/animation.js1234567 setTimeout(() =&gt; { $('body &gt; .navbar, body &gt; .section, body &gt; .footer').forEach(element =&gt; { element.style.opacity = '1';- element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out';+ element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out, box-shadow 0.3s ease-in-out'; }); source/js/animation.js12345 element.style.transform = '';- element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out';+ element.style.transition = 'opacity 0.3s ease-out, transform 0.3s ease-out, box-shadow 0.3s ease-in-out'; }, i * 100); 更新此文章未完成，等待更新。","link":"/posts/2e99af31.html"},{"title":"Magento 2.3.5-p2版本安装记录","text":"系统环境：Linux服务器，Ubuntu18.04 LTS web服务器：NGINX 数据库：Mariadb（MySQL的分支） PHP：7.2以上，这里推荐7.3版本 magento安装包：官网下载，选择合适的压缩包，通过ftp上传到服务器 magento最好在liunx上体验，在mac或者win环境下，坑会超级多 安装Nginx12sudo apt-get install nginxsudo service nginx start 并且进入网站的根目录创建空的文件夹，作为magento的根目录（var/www/html/231/） 12cd /var/www/htmlmkdir 231 tar和zip两种解压方式，自行选择其中一种，解压压缩包至指定目录 12tar -zxvf 压缩文件.tar -c 指定目录/unzip 压缩文件.zip -d 指定目录 安装PHP7.2及其组件123sudo apt-get install php7.2 php7.2-bcmath php7.2-curl php7.2-gd php7.2-mbstring php7.2-mysql php7.2-xml php7.2-fpm php7.2-intl php7.2-soap php7.2-zipsudo service php7.2-fpm start 安装mysql/mariadb1234sudo apt-get install mariadb-server mariadb-clientsudo service mariadb start 安装数据库并初始化数据库（一系列的创建）开始设置： 12sudo mysql_secure_installation mariadb初始化 (其中“\\g“试情况而定，如果显示error错误，可以舍弃) 12345sudo mysqluse mysql\\g update mysql.user set plugin='mysql_native_password' where User='root';\\g flush privileges;\\q 登陆mysql -u root -p创建新数据库新用户 12create database magento;grant all on *.* to magento2@'%' identified by 'Magento' with grant option; 配置Nginx为magento 网站创建一个新的虚拟主机：vim /etc/nginx/sites-available/magento 添加一下配置(“i”键 插入内容，完事了”:wq”保存退出)： 12345678910upstream fastcgi_backend { server unix:/run/php/php7.2-fpm.sock;}server { listen 80; server_name xxx.xx.xxx.xx(ip地址); set $MAGE_ROOT /var/www/html/231; include /var/www/html/231/nginx.conf.sample;} 通过在/etc/nginx/sites-enabled目录中创建指向它的符号链接来激活新创建的虚拟主机：1ln -s /etc/nginx/sites-available/magento /etc/nginx/sites-enabled 给magento目录赋予777权限，允许Nginx配置的读写1sudo chown -R www-data:www-data 231/ &amp;&amp; sudo chmod -R 777 231/ 重新加载刚才的Nginx配置，并且重启Nginx服务 1systemctl reload nginx &amp;&amp; systemctl restart nginx 安装magento.1输入刚才指定的IP地址，就会跳转到magento的web安装界面（进入magento命令行安装也行）","link":"/posts/52d64983.html"},{"title":"Html5","text":"MDN web docs这几天从MDN的文档里重新过了一遍html的知识，过了一遍html的基础标签，以及html5的语义化标签。 MDN Web Docs 是一个提供开放网络（Open Web）技术相关信息的网站，包括用于网站和渐进式网络应用的HTML、CSS 和API。 它还记录了一些用于Mozilla 产品的面向开发者的文档，例如Firefox 开发者工具。 HTML就其核心而言， HTML 是一种相当简单的、由不同元素组成的标记语言，它可以应用于文本片段，使文本在文档中具有不同的含义（它是一个段落吗？它是一个项目列表吗？它是一个表格吗？），将文档结构化为逻辑块（文档是否有头部？有三列内容？有一个导航菜单？），并且可以将图片，影像等内容嵌入到页面中。本模块将介绍前两个，并且介绍一些理解HTML所需的基本概念和语法。 HTML (HyperText Markup Language) 不是一门编程语言，而是一种用来告知浏览器如何组织页面的标记语言。HTML 可复杂、可简单，一切取决于开发者。它由一系列的元素（elements）组成，这些元素可以用来包围不同部分的内容，使其以某种方式呈现或者工作。 一对标签（ tags）可以为一段文字或者一张图片添加超链接，将文字设置为斜体，改变字号，等等 比如下面一段内容： 1你离开了南京，从此没有人和我说话。 转换成html代码，可以用&lt;p&gt;元素(paragraph)去封装这段文本： 1&lt;p&gt;你离开了南京，从此没有人和我说话&lt;/p&gt; 注：HTML 标签不区分大小写。也就是说，输入标签时既可以使用大写字母也可以使用小写字母。例如，标签 &lt;title&gt; 写作&lt;title&gt;、&lt;TITLE&gt;、&lt;Title&gt;、&lt;TiTlE&gt;，等等都可以正常工作。不过，从一致性、可读性等各方面来说，最好仅使用小写字母。 开始标签（Opening tag）：包含元素的名称（本例为 p），被左、右角括号所包围。表示元素从这里开始或者开始起作用 —— 在本例中即段落由此开始。 结束标签（Closing tag）：与开始标签相似，只是其在元素名之前包含了一个斜杠。这表示着元素的结尾 —— 在本例中即段落在此结束。初学者常常会犯忘记包含结束标签的错误，这可能会产生一些奇怪的结果。 内容（Content）：元素的内容，本例中就是所输入的文本本身。 元素（Element）：开始标签、结束标签与内容相结合，便是一个完整的元素。","link":"/posts/cf7d47b4.html"},{"title":"CSS扫盲","text":"HTML+CSS+Javascript，这三样加起来就可以简单制作出一个，内容完整，样式丰富且具有简单交互 功能的网页，HTML负责内容，CSS负责内容的样式展现，JavaScript负责具体交互功能的实现CSS的样式功能展现很丰富，原生css可以构建简单的样式，也可以构建更加复杂且完整的3D或者2D效果，稍微能够明白其原理，就可以去找主流的CSS框架： Bulma Bootstrap tailwind 构建基础外部样式表外部样式表是指将CSS编写在扩展名为.css的单独文件中，并从HTML&lt;link&gt;元素引用它的情况,link元素的 href 属性需要引用你的文件系统中的一个文件:123456789101112&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;My CSS experiment&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;styles.css&quot;&gt; //html标签的&lt;link&gt;进行的外部样式引用 &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello World!&lt;/h1&gt; &lt;p&gt;This is my first CSS example&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; 内部样式表内部样式表是指不使用外部CSS文件，而是将CSS放在HTML文件&lt;head&gt;标签里的&lt;style&gt;标签之中。有的时候，这种方法会比较有用（比如你使用的内容管理系统不能直接编辑CSS文件)，但该方法和外部样式表比起来更加低效 。在一个站点里，你不得不在每个页面里重复添加相同的CSS，并且在需要更改CSS时修改每个页面文件。12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;My CSS experiment&lt;/title&gt; &lt;style&gt; h1 { color: blue; background-color: yellow; border: 1px solid black; } p { color: red; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;Hello World!&lt;/h1&gt; &lt;p&gt;This is my first CSS example&lt;/p&gt; &lt;/body&gt;&lt;/html&gt; CSS选择器在css中，我们需要用来指定网页上需要样式化的HTML元素，称之为选择器。 css选择器是css规则的一部分，它是元素和其他部分组合起来告诉浏览器那个HTML元素应当是被选为应用规则中的css属性值的方式，被选择器选择的元素，叫做“选择器的对象” 选择器的种类通常分为三种：类型，类和ID选择器 12345h1 { } /*类型选择器，向所有HTML元素&lt;h1&gt;*/.class { } /*类选择器，指代某一类的css类型*/#id { } /*id选择器，指向一个ID的选择器*/ 伪类和为元素 伪元素和伪类 伪类是选择器的一种，它用于选择处于特定状态的元素，比如当它们是这一类型的第一个元素时，或者是当鼠标指针悬浮在元素上面的时候。它们表现得会像是你向你的文档的某个部分应用了一个类一样，帮你在你的标记文本中减少多余的类，让你的代码更灵活、更易于维护。 按我的自己的理解：当你需要把class类里面的第一个标签展现出不同的效果，就是伪类和伪元素需要体现的作用 伪类和伪元素123456789p:first-line{ color:red; /*伪类的表示，通常在前面有一个冒号，该语法表示&lt;p&gt;标签里的第一行 的颜色为红色*/}P::before{ color:red; /*伪元素的表示，通常在前面有两个冒号，改语法表示&lt;p&gt;标签里的前面 一个元素的颜色为红色*/} 溢出内容","link":"/posts/3574df4f.html"}],"tags":[{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"icarus","slug":"icarus","link":"/tags/icarus/"},{"name":"magento","slug":"magento","link":"/tags/magento/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Nginx","slug":"Nginx","link":"/tags/Nginx/"},{"name":"前端","slug":"前端","link":"/tags/%E5%89%8D%E7%AB%AF/"},{"name":"html","slug":"html","link":"/tags/html/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"}],"categories":[{"name":"hexo","slug":"hexo","link":"/categories/hexo/"},{"name":"Nginx","slug":"Nginx","link":"/categories/Nginx/"},{"name":"web前端","slug":"web前端","link":"/categories/web%E5%89%8D%E7%AB%AF/"}]}